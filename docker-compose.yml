version: '3'
services:
   frontend:
      container_name: react
      build:
         context: './Web-Frontend'
         dockerfile: Dockerfile
      networks:
         - network
   backend:
      container_name: express
      restart: always
      build: 
         context: './Backend'
         dockerfile: Dockerfile
      ports:
         - '3000:3000'
      depends_on:
         - db
      networks:
         - network
   db:
      container_name: mongo
      image: mongo
      ports:
         - '27017:27017'
      networks:
         - network
      volumes:
         - ./mongo-data:/data/db
   nginx:
      restart: always
      build:
         dockerfile: Dockerfile
         context: ./Nginx
      volumes:
         - ../volumes/certbot/conf:/etc/letsencrypt
         - ../volumes/certbot/www:/var/www/certbot
      ports:
         - '80:80'
         - '443:443'
      networks:
         - network
      command : "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
   jenkins:
      container_name: jenkins
      user: root
      build:
         context: ./Jenkins
         dockerfile: Dockerfile
      ports:
         - '8080:8080'
      volumes:
         - /home/jenkins:/var/jenkins_home
         - /var/run/docker.sock:/var/run/docker.sock
         - /usr/bin/docker:/usr/bin/docker
   certbot:
      image: certbot/certbot
      volumes:
         - ../volumes/certbot/conf:/etc/letsencrypt
         - ../volumes/certbot/www:/var/www/certbot 
      entrypoint : "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'" 
networks: 
  network:
    driver: bridge
